name: python-test
on: #[push,workflow_dispatch] # added multiple triggers , workflow_dispatch -- manual trigger

# Using multiple events
# If you specify multiple events, only one of those events needs to occur to trigger your workflow. 
# If multiple triggering events for your workflow occur at the same time, multiple workflow runs will be triggered.
  pull_request: 
    types: closed
  push:
    branches:
      - main  
      - 'mona/octocat'
      - 'releases/**'
          # Sequence of patterns matched against refs/tags
    tags:        
      - v2
      - v1.*
jobs:
  python_code_test:
    runs-on: ubuntu-latest
    steps:
      - name: Get_code
        uses: actions/checkout@v3 
      - name: get python 3.8
        uses: actions/setup-python@v4
        with:
            python-version: '3.9' # this will set up python 3,.9 as default 
            cache: 'pip' # caching pip dependencies: 
      - name: install dependencies
        run: |
          pip install -r requirements.txt
          python --version
      - name: run the code 
        run: python iris_classification.py
      - name: get files and folder
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: mlruns
  build_docker:
    needs: python_code_test  # will run only after successful completion of python_code_test job
    runs-on:  ubuntu-latest  # every job has its own runner and there are isolated from each other
    steps:                   # jobs will run in parallel by default
      - name: Get_code
        uses: actions/checkout@v3
      - name: get python 3.8
        uses: actions/setup-python@v4
        with:
            python-version: '3.9' # this will set up python 3,.9 as default 
            cache: 'pip' # caching pip dependencies: 
      - name: install dependencies
        run: |
          pip install -r requirements.txt
          python --version 
      - name: build docker iamge
        run: echo "build docker image" 
      - name: download the artifact from github runner
        uses: actions/download-artifact@v3 # to download the artifact created from github runner 
        with : 
          name: my-artifact # name of the artifact created ,and it has to be a sequential job
      - name : get contents
        run: ls 
          
